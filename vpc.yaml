AWSTemplateFormatVersion: 2010-09-09
Description: VPC with two private and two public subnets
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: VPC Parameters
        Parameters:
          - ClassB
Parameters:
  ClassB:
    Description: Class B of VPC (10.XXX.0.0/16)
    Type: Number
    Default: 0
    ConstraintDescription: "0-255"
    MinValue: 0
    MaxValue: 255
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Sub "10.${ClassB}.0.0/16"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Sub "10.${ClassB}.0.0/16"
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "10.${ClassB}.0.0/16"
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref "VPC"
      InternetGatewayId: !Ref "InternetGateway"
  SubnetPublicA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0
        - !GetAZs ""
      CidrBlock: !Sub "10.${ClassB}.0.0/20"
      MapPublicIpOnLaunch: true
      VpcId: !Ref "VPC"
      Tags:
        - Key: Name
          Value: Public A
  SubnetPrivateA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0
        - !GetAZs ""
      CidrBlock: !Sub "10.${ClassB}.16.0/20"
      VpcId: !Ref "VPC"
      Tags:
        - Key: Name
          Value: Private A
  SubnetPublicB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1
        - !GetAZs ""
      CidrBlock: !Sub "10.${ClassB}.32.0/20"
      MapPublicIpOnLaunch: true
      VpcId: !Ref "VPC"
      Tags:
        - Key: Name
          Value: Public B
  SubnetPrivateB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1
        - !GetAZs ""
      CidrBlock: !Sub "10.${ClassB}.48.0/20"
      VpcId: !Ref "VPC"
      Tags:
        - Key: Name
          Value: Private B
  RouteTablePublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref "VPC"
      Tags:
        - Key: Name
          Value: Public A
  RouteTablePrivate:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref "VPC"
      Tags:
        - Key: Name
          Value: Private A
  RouteTablePublicB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref "VPC"
      Tags:
        - Key: Name
          Value: Public B
  RouteTablePrivateB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref "VPC"
      Tags:
        - Key: Name
          Value: Private B
  RouteTableAssociationPublicA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref "SubnetPublicA"
      RouteTableId: !Ref "RouteTablePublic"
  RouteTableAssociationPrivateA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref "SubnetPrivateA"
      RouteTableId: !Ref "RouteTablePrivate"
  RouteTableAssociationPublicB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref "SubnetPublicB"
      RouteTableId: !Ref "RouteTablePublicB"
  RouteTableAssociationPrivateB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref "SubnetPrivateB"
      RouteTableId: !Ref "RouteTablePrivateB"
  RouteTablePublicInternetRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref "RouteTablePublic"
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref "InternetGateway"
  RouteTablePublicBInternetRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref "RouteTablePublicB"
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref "InternetGateway"
  NACLPublic:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref "VPC"
      Tags:
        - Key: Name
          Value: Public
  NACLPrivate:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref "VPC"
      Tags:
        - Key: Name
          Value: Private
  SubnetNACLAssociationPublicA:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref "SubnetPublicA"
      NetworkAclId: !Ref "NACLPublic"
  SubnetNACLAssociationPrivateA:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref "SubnetPrivateA"
      NetworkAclId: !Ref "NACLPrivate"
  SubnetNACLAssociationPublicB:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref "SubnetPublicB"
      NetworkAclId: !Ref "NACLPublic"
  SubnetNACLAssociationPrivateB:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref "SubnetPrivateB"
      NetworkAclId: !Ref "NACLPrivate"
  NACLEntryInPublicAllowAll:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref "NACLPublic"
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: "0.0.0.0/0"
  NACLEntryOutPublicAllowAll:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref "NACLPublic"
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: "0.0.0.0/0"
  NACLEntryInPrivateAllowAll:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref "NACLPrivate"
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: "0.0.0.0/0"
  NACLEntryOutPrivateAllowAll:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref "NACLPrivate"
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: "0.0.0.0/0"
Outputs:
